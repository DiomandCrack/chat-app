{"version":3,"sources":["../src/index.js"],"names":["http","require","express","cors","morgan","bodyParser","webSocketServer","Server","Database","Model","AppRouter","PORT","app","server","createServer","use","exposedHeaders","json","limit","wss","connect","then","db","console","log","catch","err","models","routers","listen","process","env","address","port","module","exports"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,IAAMG,SAASH,QAAQ,QAAR,CAAf;AACA,IAAMI,aAAaJ,QAAQ,aAAR,CAAnB;AACA,IAAMK,kBAAkBL,QAAQ,KAAR,EAAeM,MAAvC;;AAEA;AACA,IAAMC,WAAWP,QAAQ,YAAR,CAAjB;;AAEA,IAAMQ,QAAQR,QAAQ,UAAR,CAAd;AACA,IAAMS,YAAYT,QAAQ,cAAR,CAAlB;;AAEA,IAAMU,OAAO,IAAb;AACA,IAAMC,MAAMV,SAAZ;AACAU,IAAIC,MAAJ,GAAab,KAAKc,YAAL,CAAkBF,GAAlB,CAAb;;AAEAA,IAAIG,GAAJ,CAAQX,OAAO,KAAP,CAAR;;AAEAQ,IAAIG,GAAJ,CAAQZ,KAAK;AACTa,oBAAgB;AADP,CAAL,CAAR;;AAIAJ,IAAIG,GAAJ,CAAQV,WAAWY,IAAX,CAAgB;AACpBC,WAAO;AADa,CAAhB,CAAR;;AAKAN,IAAIO,GAAJ,GAAU,IAAIb,eAAJ,CAAoB;AAC1BO,YAAQD,IAAIC;AADc,CAApB,CAAV;AAGA;AACA;AACA,IAAIL,QAAJ,GAAeY,OAAf,GAAyBC,IAAzB,CAA8B,UAACC,EAAD,EAAQ;AAC9BC,YAAQC,GAAR,CAAY,kCAAZ;AACAZ,QAAIU,EAAJ,GAASA,EAAT;AACH,CAHL,EAGOG,KAHP,CAGa,UAACC,GAAD,EAAS;AACd,UAAOA,GAAP;AACH,CALL;AAMI;;;;;;;;;;AAUA;AACJd,IAAIe,MAAJ,GAAa,IAAIlB,KAAJ,CAAUG,GAAV,CAAb;AACAA,IAAIgB,OAAJ,GAAc,IAAIlB,SAAJ,CAAcE,GAAd,CAAd;;AAGAA,IAAIC,MAAJ,CAAWgB,MAAX,CAAkBC,QAAQC,GAAR,CAAYpB,IAAZ,IAAoBA,IAAtC,EAA4C,YAAM;AAC9CY,YAAQC,GAAR,6BAAsCZ,IAAIC,MAAJ,CAAWmB,OAAX,GAAqBC,IAA3D;AACH,CAFD;;AAIAC,OAAOC,OAAP,GAAiBvB,GAAjB","file":"index.js","sourcesContent":["const http = require('http');\r\nconst express = require('express');\r\nconst cors = require('cors');\r\nconst morgan = require('morgan');\r\nconst bodyParser = require('body-parser');\r\nconst webSocketServer = require('uws').Server;\r\n\r\n//require database\r\nconst Database = require('./database')\r\n\r\nconst Model = require('./models');\r\nconst AppRouter = require('./app-router');\r\n\r\nconst PORT = 3001;\r\nconst app = express();\r\napp.server = http.createServer(app);\r\n\r\napp.use(morgan('dev'));\r\n\r\napp.use(cors({\r\n    exposedHeaders: '*'\r\n}));\r\n\r\napp.use(bodyParser.json({\r\n    limit: '50mb'\r\n}));\r\n\r\n\r\napp.wss = new webSocketServer({\r\n    server: app.server\r\n});\r\n//connect to Mongo database \r\n//promise\r\nnew Database().connect().then((db) => {\r\n        console.log(\"Successful connected to database\")\r\n        app.db = db;\r\n    }).catch((err) => {\r\n        throw (err)\r\n    })\r\n    /* \r\n    //callback function ver\r\n    new Database().connect((err, db) => {\r\n        console.log('Connecting to database with err', err)\r\n        if (err) {\r\n            throw (err);\r\n        }\r\n        console.log(\"successful connect to database\")\r\n        app.db = db;\r\n    }); */\r\n    //end to Mongo\r\napp.models = new Model(app);\r\napp.routers = new AppRouter(app);\r\n\r\n\r\napp.server.listen(process.env.PORT || PORT, () => {\r\n    console.log(`App is running on port ${app.server.address().port}`);\r\n})\r\n\r\nmodule.exports = app;"]}